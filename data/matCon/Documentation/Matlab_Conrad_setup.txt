To use the CONRAD package within Matlab, the following steps are necessary (MATLAB Version 2013b or greater recommended):

1) Copy library files from CONRAD to the Matlab directory:
	 a) Copy all files that contain "gluegen", "joal", "jocl", "jogl" from "...\CONRAD\lib" to "...\MATLAB\R2014b\java\jarext"
	 	(NOTE: There will be some file conflicts, please save the old files from the Matlab distribution to some new directory, e.g. "OriginalMatlabLibraries" and use the CONRAD files)
	 b)	Adjust the file "...\MATLAB\toolbox\local\classpath.txt" (static java classpath file)
		Make sure that the file contains the following lines (search for them):
		
		"$matlabroot/java/jarext/gluegen-rt.jar"
		"$matlabroot/java/jarext/jogl-all.jar"
		"$matlabroot/java/jarext/jocl.jar"
		
		If some of the lines are missing please add them to the file and save it.
	
2)  Add the Matlab m-files shiped with this zip file to your Matlab path.

3)  Before you can use CONRAD you need to load all the libraries to Matlab

	% Do this by the following Matlab commands:
	% (It is recomended to put this initial call into a Matlab startup file "startup.m". An example is given in the documentation directory of this zip file.)
	c=CONRAD(<Path-To-Conrad>); % This file has been included in step (2)
	c.initialize();

	% To check if it works, you can open ImageJ by typing the following into your Matlab console
	import ij.*;
	ImageJ();
	
4) Check the "MatlabCONRADtutorial.m" to see the reconstruction example
   (Of course this only works if your CONRAD OpenCL is working)
   
   
Note 1:  You might want to increase the Java heap memory settings of Matlab
		 a) In Matlab go to "Preferences"
		 b) Go to the "General" tab and then to "Java Heap Memory"
		 c) The heap memory can be increased up to a maximum of 8164MB
		(Note: If you need more heap memory, use a "java.opts" file as described in http://www.mathworks.de/support/solutions/en/data/1-18I2C/)
	
NOTE 2: Please verify that the Java version of your Matlab JVM is at least as new as the Java version that you use to build CONRAD.
		-> You can check your Matlab-Java version by entering "version -java" into your Matlab Command Window
		-> If you compile CONRAD with a higher version you can set compatibility in your Eclipse package by:
			1) Open Eclipse with the CONRAD workspace
			2) Goto: Project -> Properties -> Java Compiler
			3) Set the JDK Compliance level to your Matlab's Java version
		-> A little less-documented but also working is a Matlab JVM upgrade as explained here (Matlab Upgrade to Java 8 seemed fine for Matlab 2013b or greater / no guarantee given):
		   http://www.mathworks.com/matlabcentral/answers/130359-how-do-i-change-the-java-virtual-machine-jvm-that-matlab-is-using-on-windows